version: '3.8'
services:
  mysql:
    image: mysql:latest
    platform: linux/x86_64
    restart: unless-stopped
    ports:
      - '${DB_PORT:-3306}:3306'
    volumes:
      - mysqldata:/var/lib/mysql
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    networks:
      - localnetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
  framework.app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: framework.app:1.0.0
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/var/www/html/
    depends_on:
      - mysql
    networks:
      - localnetwork
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - '${APP_PORT:-80}:80'
      - '${APP_PORT_SECURE:-443}:443'
    volumes:
      - ./:/var/www/html/
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/logs/:/var/log/nginx/
    depends_on:
      - framework.app
    networks:
      - localnetwork
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
volumes:
  mysqldata:
    driver: local
networks:
  localnetwork:
    driver: bridge
